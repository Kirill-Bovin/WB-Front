import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Card, CardContent } from "@/components/ui/card";
import PriceHistogram from "@/charts/PriceHistogram";
import { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, } from "recharts";
const Tables_and_Paginates = ({ paginated, sortedAndFiltered, page, pageSize, setPage, }) => {
    return (_jsxs(_Fragment, { children: [_jsx(Card, { children: _jsxs(CardContent, { children: [_jsx("div", { className: "overflow-x-auto", children: _jsxs("table", { className: "min-w-full border border-black border-collapse text-sm text-center", children: [_jsx("thead", { className: "bg-gray-100", children: _jsxs("tr", { children: [_jsx("th", { className: "border border-black px-4 py-2", children: "\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435" }), _jsx("th", { className: "border border-black px-4 py-2", children: "\u0426\u0435\u043D\u0430" }), _jsx("th", { className: "border border-black px-4 py-2", children: "\u0426\u0435\u043D\u0430 \u0441\u043E \u0441\u043A\u0438\u0434\u043A\u043E\u0439" }), _jsx("th", { className: "border border-black px-4 py-2", children: "\u0420\u0435\u0439\u0442\u0438\u043D\u0433" }), _jsx("th", { className: "border border-black px-4 py-2", children: "\u041E\u0442\u0437\u044B\u0432\u044B" })] }) }), _jsx("tbody", { children: paginated.map((p) => (_jsxs("tr", { className: "hover:bg-gray-50", children: [_jsx("td", { className: "border border-black px-4 py-2", children: p.title }), _jsx("td", { className: "border border-black px-4 py-2", children: p.price }), _jsx("td", { className: "border border-black px-4 py-2", children: p.discounted_price }), _jsx("td", { className: "border border-black px-4 py-2", children: p.rating }), _jsx("td", { className: "border border-black px-4 py-2", children: p.reviews })] }, p.id))) })] }) }), _jsxs("div", { className: "flex justify-between items-center mt-4", children: [_jsx("button", { className: "px-3 py-1 border rounded disabled:opacity-50", disabled: page === 1, onClick: () => setPage((p) => Math.max(1, typeof p === "number" ? p - 1 : 1)), children: "\u041D\u0430\u0437\u0430\u0434" }), _jsxs("span", { children: [Math.min((page - 1) * pageSize + 1, sortedAndFiltered.length), " / ", sortedAndFiltered.length] }), _jsx("button", { className: "px-3 py-1 border rounded disabled:opacity-50", disabled: page * pageSize >= sortedAndFiltered.length, onClick: () => setPage((p) => (typeof p === "number" ? p + 1 : page + 1)), children: "\u0412\u043F\u0435\u0440\u0451\u0434" })] })] }) }), _jsxs("div", { className: "grid md:grid-cols-2 gap-4 mt-6", children: [_jsx(Card, { children: _jsx(CardContent, { children: _jsx(PriceHistogram, { products: sortedAndFiltered }) }) }), _jsx(Card, { children: _jsxs(CardContent, { children: [_jsx("h3", { className: "text-center font-semibold mb-2", children: "\u0421\u043A\u0438\u0434\u043A\u0430 vs \u0420\u0435\u0439\u0442\u0438\u043D\u0433" }), _jsxs(LineChart, { width: 400, height: 250, data: sortedAndFiltered.map((p) => ({
                                        rating: p.rating,
                                        discount: p.price - p.discounted_price,
                                        name: p.title,
                                    })), children: [_jsx(CartesianGrid, { strokeDasharray: "3 3" }), _jsx(XAxis, { dataKey: "rating" }), _jsx(YAxis, {}), _jsx(Tooltip, {}), _jsx(Line, { type: "monotone", dataKey: "discount", stroke: "#82ca9d" })] })] }) })] })] }));
};
export default Tables_and_Paginates;
